<?xml version='1.0' encoding='utf-8' ?>

<!-- build 10000.16.1223.0117                               -->
<workbook source-build='10.0.5 (10000.16.1223.0117)' source-platform='mac' version='10.0' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='restaurant_businesses' inline='true' name='federated.1apeh180rt596z16v3i990qkjpcx' version='10.0'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='restaurant_businesses' name='textscan.0hyesii04o6jg719ah5ph1q1txd4'>
            <connection class='textscan' directory='/Users/christopherpleasants/dsi2016/yelp-refiner/datasets' filename='restaurant_businesses.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <relation connection='textscan.0hyesii04o6jg719ah5ph1q1txd4' name='restaurant_businesses.csv' table='[restaurant_businesses#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='integer' name='F1' ordinal='0' />
            <column datatype='string' name='attributes' ordinal='1' />
            <column datatype='string' name='business_id' ordinal='2' />
            <column datatype='string' name='categories' ordinal='3' />
            <column datatype='string' name='city' ordinal='4' />
            <column datatype='string' name='full_address' ordinal='5' />
            <column datatype='string' name='hours' ordinal='6' />
            <column datatype='real' name='latitude' ordinal='7' />
            <column datatype='real' name='longitude' ordinal='8' />
            <column datatype='string' name='name' ordinal='9' />
            <column datatype='string' name='neighborhoods' ordinal='10' />
            <column datatype='boolean' name='open' ordinal='11' />
            <column datatype='integer' name='review_count' ordinal='12' />
            <column datatype='real' name='stars' ordinal='13' />
            <column datatype='string' name='state' ordinal='14' />
            <column datatype='string' name='type' ordinal='15' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>F1</remote-name>
            <remote-type>20</remote-type>
            <local-name>[F1]</local-name>
            <parent-name>[restaurant_businesses.csv]</parent-name>
            <remote-alias>F1</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>attributes</remote-name>
            <remote-type>129</remote-type>
            <local-name>[attributes]</local-name>
            <parent-name>[restaurant_businesses.csv]</parent-name>
            <remote-alias>attributes</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>business_id</remote-name>
            <remote-type>129</remote-type>
            <local-name>[business_id]</local-name>
            <parent-name>[restaurant_businesses.csv]</parent-name>
            <remote-alias>business_id</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>categories</remote-name>
            <remote-type>129</remote-type>
            <local-name>[categories]</local-name>
            <parent-name>[restaurant_businesses.csv]</parent-name>
            <remote-alias>categories</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>city</remote-name>
            <remote-type>129</remote-type>
            <local-name>[city]</local-name>
            <parent-name>[restaurant_businesses.csv]</parent-name>
            <remote-alias>city</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>full_address</remote-name>
            <remote-type>129</remote-type>
            <local-name>[full_address]</local-name>
            <parent-name>[restaurant_businesses.csv]</parent-name>
            <remote-alias>full_address</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>hours</remote-name>
            <remote-type>129</remote-type>
            <local-name>[hours]</local-name>
            <parent-name>[restaurant_businesses.csv]</parent-name>
            <remote-alias>hours</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>latitude</remote-name>
            <remote-type>5</remote-type>
            <local-name>[latitude]</local-name>
            <parent-name>[restaurant_businesses.csv]</parent-name>
            <remote-alias>latitude</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>longitude</remote-name>
            <remote-type>5</remote-type>
            <local-name>[longitude]</local-name>
            <parent-name>[restaurant_businesses.csv]</parent-name>
            <remote-alias>longitude</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[name]</local-name>
            <parent-name>[restaurant_businesses.csv]</parent-name>
            <remote-alias>name</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>neighborhoods</remote-name>
            <remote-type>129</remote-type>
            <local-name>[neighborhoods]</local-name>
            <parent-name>[restaurant_businesses.csv]</parent-name>
            <remote-alias>neighborhoods</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>open</remote-name>
            <remote-type>11</remote-type>
            <local-name>[open]</local-name>
            <parent-name>[restaurant_businesses.csv]</parent-name>
            <remote-alias>open</remote-alias>
            <ordinal>11</ordinal>
            <local-type>boolean</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;bool&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>review_count</remote-name>
            <remote-type>20</remote-type>
            <local-name>[review_count]</local-name>
            <parent-name>[restaurant_businesses.csv]</parent-name>
            <remote-alias>review_count</remote-alias>
            <ordinal>12</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>stars</remote-name>
            <remote-type>5</remote-type>
            <local-name>[stars]</local-name>
            <parent-name>[restaurant_businesses.csv]</parent-name>
            <remote-alias>stars</remote-alias>
            <ordinal>13</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>state</remote-name>
            <remote-type>129</remote-type>
            <local-name>[state]</local-name>
            <parent-name>[restaurant_businesses.csv]</parent-name>
            <remote-alias>state</remote-alias>
            <ordinal>14</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>type</remote-name>
            <remote-type>129</remote-type>
            <local-name>[type]</local-name>
            <parent-name>[restaurant_businesses.csv]</parent-name>
            <remote-alias>type</remote-alias>
            <ordinal>15</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[restaurant_businesses.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column aggregation='None' datatype='integer' name='[Review Count (bin) (copy)]' role='dimension' type='quantitative'>
        <calculation class='bin' decimals='2' formula='[review_count]' peg='0' size='250' />
      </column>
      <column aggregation='None' datatype='integer' name='[Review Count (bin)]' role='dimension' type='quantitative'>
        <calculation class='bin' decimals='1' formula='[review_count]' peg='0' size='10' />
      </column>
      <column datatype='integer' name='[Stars (bin)]' role='dimension' type='quantitative'>
        <calculation class='bin' decimals='-1' formula='[stars]' peg='0' size='0.5' />
      </column>
      <column caption='Attributes' datatype='string' name='[attributes]' role='dimension' type='nominal' />
      <column caption='Business Id' datatype='string' name='[business_id]' role='dimension' type='nominal' />
      <column caption='Categories' datatype='string' name='[categories]' role='dimension' type='nominal' />
      <column caption='City' datatype='string' name='[city]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
      <column caption='Full Address' datatype='string' name='[full_address]' role='dimension' type='nominal' />
      <column caption='Hours' datatype='string' name='[hours]' role='dimension' type='nominal' />
      <column aggregation='Avg' caption='Latitude' datatype='real' name='[latitude]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
      <column aggregation='Avg' caption='Longitude' datatype='real' name='[longitude]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
      <column caption='Name' datatype='string' name='[name]' role='dimension' type='nominal' />
      <column caption='Neighborhoods' datatype='string' name='[neighborhoods]' role='dimension' type='nominal' />
      <column caption='Open' datatype='boolean' name='[open]' role='dimension' type='nominal' />
      <column caption='Review Count' datatype='integer' name='[review_count]' role='measure' type='quantitative' />
      <column caption='Stars' datatype='real' name='[stars]' role='measure' type='quantitative' />
      <column caption='State' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column caption='Type' datatype='string' name='[type]' role='dimension' type='nominal' />
      <drill-paths>
        <drill-path name='state, city'>
          <field>[state]</field>
          <field>[city]</field>
        </drill-path>
      </drill-paths>
      <extract count='-1' enabled='true' units='records'>
        <connection class='dataengine' dbname='/Users/christopherpleasants/dsi2016/yelp-refiner/datasets/restaurant_businesses.tde' schema='Extract' tablename='Extract' update-time='01/17/2017 01:11:56 AM'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <calculations>
            <calculation column='[Number of Records]' formula='1' />
          </calculations>
          <refresh>
            <refresh-event add-from-file-path='' increment-value='%null%' refresh-type='create' rows-inserted='26735' timestamp-start='2017-01-17 01:11:56.246' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>F1</remote-name>
              <remote-type>2</remote-type>
              <local-name>[F1]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>F1</remote-alias>
              <ordinal>0</ordinal>
              <family>restaurant_businesses.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>26735</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>357366745.0</statistic>
                <statistic aggregation='Avg' datatype='real'>13367.0</statistic>
                <statistic aggregation='Min' datatype='integer'>0</statistic>
                <statistic aggregation='Max' datatype='integer'>26734</statistic>
                <statistic aggregation='Stdev' datatype='real'>7717.8740596099378</statistic>
                <statistic aggregation='StdevP' datatype='real'>7717.7297179934967</statistic>
                <statistic aggregation='Var' datatype='real'>59565579.999999985</statistic>
                <statistic aggregation='VarP' datatype='real'>59563351.999999985</statistic>
                <statistic aggregation='Count' datatype='integer'>26735</statistic>
                <statistic aggregation='Median' datatype='integer'>13367</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>6369347496135.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>2</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (unique)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint16&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Number of Records</remote-name>
              <remote-type>16</remote-type>
              <local-name>[Number of Records]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Number of Records</remote-alias>
              <ordinal>1</ordinal>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>26735.0</statistic>
                <statistic aggregation='Avg' datatype='real'>1.0</statistic>
                <statistic aggregation='Min' datatype='integer'>1</statistic>
                <statistic aggregation='Max' datatype='integer'>1</statistic>
                <statistic aggregation='Stdev' datatype='real'>0.0</statistic>
                <statistic aggregation='StdevP' datatype='real'>0.0</statistic>
                <statistic aggregation='Var' datatype='real'>0.0</statistic>
                <statistic aggregation='VarP' datatype='real'>0.0</statistic>
                <statistic aggregation='Count' datatype='integer'>26735</statistic>
                <statistic aggregation='Median' datatype='integer'>1</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>26735.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>attributes</remote-name>
              <remote-type>129</remote-type>
              <local-name>[attributes]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>attributes</remote-alias>
              <ordinal>2</ordinal>
              <family>restaurant_businesses.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>23952</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;{}&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;{u&apos;Wi-Fi&apos;: u&apos;no&apos;}&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>26735</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>8</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>4</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>business_id</remote-name>
              <remote-type>129</remote-type>
              <local-name>[business_id]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>business_id</remote-alias>
              <ordinal>3</ordinal>
              <family>restaurant_businesses.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>26735</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;__CQhr0M-OpKdu0DXgGcaQ&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;ZZz_VVWhimxiSYOMlojfZQ&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>26735</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>9</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>4</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (unique)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>categories</remote-name>
              <remote-type>129</remote-type>
              <local-name>[categories]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>categories</remote-alias>
              <ordinal>4</ordinal>
              <family>restaurant_businesses.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>4320</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;[Active Life, American (Traditional), Amusement Parks, Restaurants]&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;[Yoga, Beauty &amp; Spas, Cafes, Fitness &amp; Instruction, Active Life, Day Spas, Restaurants]&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>26735</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>4</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>4</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>city</remote-name>
              <remote-type>129</remote-type>
              <local-name>[city]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>city</remote-alias>
              <ordinal>5</ordinal>
              <family>restaurant_businesses.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>297</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;Ahwatukee&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;Youngtown&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>26735</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>3</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>full_address</remote-name>
              <remote-type>129</remote-type>
              <local-name>[full_address]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>full_address</remote-alias>
              <ordinal>6</ordinal>
              <family>restaurant_businesses.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>23258</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;1 - 3 Rutland Street&#10;Old Town&#10;Edinburgh EH1 2AE&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;Zum Sportzentrum 3&#10;76228 Karlsruhe&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>26735</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>7</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>4</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>hours</remote-name>
              <remote-type>129</remote-type>
              <local-name>[hours]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>hours</remote-alias>
              <ordinal>7</ordinal>
              <family>restaurant_businesses.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>7742</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;{}&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;{u&apos;Wednesday&apos;: {u&apos;close&apos;: u&apos;20:00&apos;, u&apos;open&apos;: u&apos;17:00&apos;}, u&apos;Saturday&apos;: {u&apos;close&apos;: u&apos;11:00&apos;, u&apos;open&apos;: u&apos;07:00&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>26735</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>5</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>4</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>latitude</remote-name>
              <remote-type>5</remote-type>
              <local-name>[latitude]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>latitude</remote-alias>
              <ordinal>8</ordinal>
              <family>restaurant_businesses.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>23525</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>1023221.447291514</statistic>
                <statistic aggregation='Avg' datatype='real'>38.272730401777224</statistic>
                <statistic aggregation='Min' datatype='real'>32.872254290999997</statistic>
                <statistic aggregation='Max' datatype='real'>56.030888400000002</statistic>
                <statistic aggregation='Stdev' datatype='real'>6.0280513222718772</statistic>
                <statistic aggregation='StdevP' datatype='real'>6.0279385841441071</statistic>
                <statistic aggregation='Var' datatype='real'>36.337402743943727</statistic>
                <statistic aggregation='VarP' datatype='real'>36.336043574213264</statistic>
                <statistic aggregation='Count' datatype='integer'>26735</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>40132922.718461007</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>longitude</remote-name>
              <remote-type>5</remote-type>
              <local-name>[longitude]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>longitude</remote-alias>
              <ordinal>9</ordinal>
              <family>restaurant_businesses.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>23591</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>-2489878.4736890458</statistic>
                <statistic aggregation='Avg' datatype='real'>-93.131792544942797</statistic>
                <statistic aggregation='Min' datatype='real'>-115.36672179999999</statistic>
                <statistic aggregation='Max' datatype='real'>8.5492494004600008</statistic>
                <statistic aggregation='Stdev' datatype='real'>30.571225601366059</statistic>
                <statistic aggregation='StdevP' datatype='real'>30.570653850637061</statistic>
                <statistic aggregation='Var' datatype='real'>934.59983476961952</statistic>
                <statistic aggregation='VarP' datatype='real'>934.56487685547063</statistic>
                <statistic aggregation='Count' datatype='integer'>26735</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>256872437.45645803</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>name</remote-name>
              <remote-type>129</remote-type>
              <local-name>[name]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>name</remote-alias>
              <ordinal>10</ordinal>
              <family>restaurant_businesses.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>18564</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;.99 Cent Pizza Place&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;Zytynsky&apos;s Deli&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>26735</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>6</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>4</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>neighborhoods</remote-name>
              <remote-type>129</remote-type>
              <local-name>[neighborhoods]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>neighborhoods</remote-alias>
              <ordinal>11</ordinal>
              <family>restaurant_businesses.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>248</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;[]&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;[Worthington Park]&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>26735</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>open</remote-name>
              <remote-type>11</remote-type>
              <local-name>[open]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>open</remote-alias>
              <ordinal>12</ordinal>
              <family>restaurant_businesses.csv</family>
              <local-type>boolean</local-type>
              <aggregation>Count</aggregation>
              <approx-count>2</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='boolean'>false</statistic>
                <statistic aggregation='Max' datatype='boolean'>true</statistic>
                <statistic aggregation='Count' datatype='integer'>26735</statistic>
                <statistic aggregation='Median' datatype='boolean'>true</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>0</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;bool&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>review_count</remote-name>
              <remote-type>2</remote-type>
              <local-name>[review_count]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>review_count</remote-alias>
              <ordinal>13</ordinal>
              <family>restaurant_businesses.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>804</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>1784065.0</statistic>
                <statistic aggregation='Avg' datatype='real'>66.73143818963905</statistic>
                <statistic aggregation='Min' datatype='integer'>3</statistic>
                <statistic aggregation='Max' datatype='integer'>6200</statistic>
                <statistic aggregation='Stdev' datatype='real'>162.46832606195827</statistic>
                <statistic aggregation='StdevP' datatype='real'>162.46528753857436</statistic>
                <statistic aggregation='Var' datatype='real'>26395.956973374789</statistic>
                <statistic aggregation='VarP' datatype='real'>26394.969654991644</statistic>
                <statistic aggregation='Count' datatype='integer'>26735</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>824722737.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint16&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>stars</remote-name>
              <remote-type>4</remote-type>
              <local-name>[stars]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>stars</remote-alias>
              <ordinal>14</ordinal>
              <family>restaurant_businesses.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>9</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='real'>1.0</statistic>
                <statistic aggregation='Max' datatype='real'>5.0</statistic>
                <statistic aggregation='Count' datatype='integer'>26735</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;float&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>state</remote-name>
              <remote-type>129</remote-type>
              <local-name>[state]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>state</remote-alias>
              <ordinal>15</ordinal>
              <family>restaurant_businesses.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>22</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;AK&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;WI&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>26734</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>type</remote-name>
              <remote-type>129</remote-type>
              <local-name>[type]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>type</remote-alias>
              <ordinal>16</ordinal>
              <family>restaurant_businesses.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>1</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;business&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;business&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>26735</statistic>
                <statistic aggregation='Median' datatype='string'>&quot;business&quot;</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' dim-percentage='0.625743' measure-ordering='alphabetic' measure-percentage='0.374257' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
    <datasource caption='cities' inline='true' name='federated.0g3qb4g1qvqt2j1fsnw3u1gudf9e' version='10.0'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='cities' name='textscan.13iubcs1lgvv4o17x1j851tez14p'>
            <connection class='textscan' directory='/Users/christopherpleasants/dsi2016/yelp-refiner' filename='cities.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <relation connection='textscan.13iubcs1lgvv4o17x1j851tez14p' name='cities.csv' table='[cities#csv]' type='table'>
          <columns character-set='UTF-8' header='no' locale='en_US' separator=','>
            <column datatype='string' name='F1' ordinal='0' />
            <column datatype='integer' name='F2' ordinal='1' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>F1</remote-name>
            <remote-type>129</remote-type>
            <local-name>[F1]</local-name>
            <parent-name>[cities.csv]</parent-name>
            <remote-alias>F1</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F2</remote-name>
            <remote-type>20</remote-type>
            <local-name>[F2]</local-name>
            <parent-name>[cities.csv]</parent-name>
            <remote-alias>F2</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[cities.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;false&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Cities' datatype='string' name='[F1]' role='dimension' type='nominal' />
      <column caption='Count' datatype='integer' name='[F2]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <extract count='-1' enabled='true' units='records'>
        <connection class='dataengine' dbname='/Users/christopherpleasants/dsi2016/yelp-refiner/datasets/cities.tde' schema='Extract' tablename='Extract' update-time='01/17/2017 01:39:11 AM'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <calculations>
            <calculation column='[Number of Records]' formula='1' />
          </calculations>
          <refresh>
            <refresh-event add-from-file-path='' increment-value='%null%' refresh-type='create' rows-inserted='298' timestamp-start='2017-01-17 01:39:11.196' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>F1</remote-name>
              <remote-type>129</remote-type>
              <local-name>[F1]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>F1</remote-alias>
              <ordinal>0</ordinal>
              <family>cities.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>297</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;Ahwatukee&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;Youngtown&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>298</statistic>
                <statistic aggregation='Median' datatype='string'>&quot;Mcfarland&quot;</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>0</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>F2</remote-name>
              <remote-type>2</remote-type>
              <local-name>[F2]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>F2</remote-alias>
              <ordinal>1</ordinal>
              <family>cities.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>72</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>26735.0</statistic>
                <statistic aggregation='Avg' datatype='real'>89.714765100671144</statistic>
                <statistic aggregation='Min' datatype='integer'>1</statistic>
                <statistic aggregation='Max' datatype='integer'>4930</statistic>
                <statistic aggregation='Stdev' datatype='real'>417.04735237703176</statistic>
                <statistic aggregation='StdevP' datatype='real'>416.34702047672221</statistic>
                <statistic aggregation='Var' datatype='real'>173928.49412469211</statistic>
                <statistic aggregation='VarP' datatype='real'>173344.84145984414</statistic>
                <statistic aggregation='Count' datatype='integer'>298</statistic>
                <statistic aggregation='Median' datatype='integer'>3</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>54055287.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>2</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint16&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Number of Records</remote-name>
              <remote-type>16</remote-type>
              <local-name>[Number of Records]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Number of Records</remote-alias>
              <ordinal>2</ordinal>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>298.0</statistic>
                <statistic aggregation='Avg' datatype='real'>1.0</statistic>
                <statistic aggregation='Min' datatype='integer'>1</statistic>
                <statistic aggregation='Max' datatype='integer'>1</statistic>
                <statistic aggregation='Stdev' datatype='real'>0.0</statistic>
                <statistic aggregation='StdevP' datatype='real'>0.0</statistic>
                <statistic aggregation='Var' datatype='real'>0.0</statistic>
                <statistic aggregation='VarP' datatype='real'>0.0</statistic>
                <statistic aggregation='Count' datatype='integer'>298</statistic>
                <statistic aggregation='Median' datatype='integer'>1</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>298.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' dim-percentage='0.479208' measure-ordering='alphabetic' measure-percentage='0.520792' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <field-sort-info field-sort-order-type='custom-order'>
        <field-sort-custom-order field='F1' />
        <field-sort-custom-order field='F2' />
      </field-sort-info>
    </datasource>
    <datasource caption='restaurant_cats' inline='true' name='federated.1pm2nz005kg5am1426ety1txcjdz' version='10.0'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='restaurant_cats' name='textscan.1t0nn0p1c1gqcf17q1zpp0z4fcc7'>
            <connection class='textscan' directory='/Users/christopherpleasants/dsi2016/yelp-refiner' filename='restaurant_cats.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <relation connection='textscan.1t0nn0p1c1gqcf17q1zpp0z4fcc7' name='restaurant_cats.csv' table='[restaurant_cats#csv]' type='table'>
          <columns character-set='UTF-8' header='no' locale='en_US' separator=','>
            <column datatype='string' name='F1' ordinal='0' />
            <column datatype='integer' name='F2' ordinal='1' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>F1</remote-name>
            <remote-type>129</remote-type>
            <local-name>[F1]</local-name>
            <parent-name>[restaurant_cats.csv]</parent-name>
            <remote-alias>F1</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F2</remote-name>
            <remote-type>20</remote-type>
            <local-name>[F2]</local-name>
            <parent-name>[restaurant_cats.csv]</parent-name>
            <remote-alias>F2</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[restaurant_cats.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;false&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Restaurant Type' datatype='string' name='[F1]' role='dimension' type='nominal' />
      <column caption='Count' datatype='integer' name='[F2]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <extract count='-1' enabled='true' units='records'>
        <connection class='dataengine' dbname='/Users/christopherpleasants/dsi2016/yelp-refiner/datasets/restaurant_cats.tde' schema='Extract' tablename='Extract' update-time='01/17/2017 01:40:15 AM'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <calculations>
            <calculation column='[Number of Records]' formula='1' />
          </calculations>
          <refresh>
            <refresh-event add-from-file-path='' increment-value='%null%' refresh-type='create' rows-inserted='404' timestamp-start='2017-01-17 01:40:15.160' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>F1</remote-name>
              <remote-type>129</remote-type>
              <local-name>[F1]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>F1</remote-alias>
              <ordinal>0</ordinal>
              <family>restaurant_cats.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>265</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;Active Life&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;Yoga&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>404</statistic>
                <statistic aggregation='Median' datatype='string'>&quot;Hiking&quot;</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>0</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>F2</remote-name>
              <remote-type>3</remote-type>
              <local-name>[F2]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>F2</remote-alias>
              <ordinal>1</ordinal>
              <family>restaurant_cats.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>318</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>3858005.0</statistic>
                <statistic aggregation='Avg' datatype='real'>9549.5173267326736</statistic>
                <statistic aggregation='Min' datatype='integer'>1</statistic>
                <statistic aggregation='Max' datatype='integer'>1254023</statistic>
                <statistic aggregation='Stdev' datatype='real'>64165.568260328801</statistic>
                <statistic aggregation='StdevP' datatype='real'>64086.106225806412</statistic>
                <statistic aggregation='Var' datatype='real'>4117220150.1709151</statistic>
                <statistic aggregation='VarP' datatype='real'>4107029011.1853433</statistic>
                <statistic aggregation='Count' datatype='integer'>404</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>1696081806113.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint32&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Number of Records</remote-name>
              <remote-type>16</remote-type>
              <local-name>[Number of Records]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Number of Records</remote-alias>
              <ordinal>2</ordinal>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>404.0</statistic>
                <statistic aggregation='Avg' datatype='real'>1.0</statistic>
                <statistic aggregation='Min' datatype='integer'>1</statistic>
                <statistic aggregation='Max' datatype='integer'>1</statistic>
                <statistic aggregation='Stdev' datatype='real'>0.0</statistic>
                <statistic aggregation='StdevP' datatype='real'>0.0</statistic>
                <statistic aggregation='Var' datatype='real'>0.0</statistic>
                <statistic aggregation='VarP' datatype='real'>0.0</statistic>
                <statistic aggregation='Count' datatype='integer'>404</statistic>
                <statistic aggregation='Median' datatype='integer'>1</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>404.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' dim-percentage='0.479208' measure-ordering='alphabetic' measure-percentage='0.520792' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <field-sort-info field-sort-order-type='custom-order'>
        <field-sort-custom-order field='F1' />
        <field-sort-custom-order field='F2' />
      </field-sort-info>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='Cities'>
      <table>
        <view>
          <datasources>
            <datasource caption='cities' name='federated.0g3qb4g1qvqt2j1fsnw3u1gudf9e' />
          </datasources>
          <datasource-dependencies datasource='federated.0g3qb4g1qvqt2j1fsnw3u1gudf9e'>
            <column caption='Cities' datatype='string' name='[F1]' role='dimension' type='nominal' />
            <column caption='Count' datatype='integer' name='[F2]' role='measure' type='quantitative' />
            <column-instance column='[F1]' derivation='None' name='[none:F1:nk]' pivot='key' type='nominal' />
            <column-instance column='[F2]' derivation='Sum' name='[sum:F2:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0g3qb4g1qvqt2j1fsnw3u1gudf9e].[none:F1:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:F1:nk]' member='&quot;Champaign&quot;' />
              <groupfilter function='member' level='[none:F1:nk]' member='&quot;Chandler&quot;' />
              <groupfilter function='member' level='[none:F1:nk]' member='&quot;Charlotte&quot;' />
              <groupfilter function='member' level='[none:F1:nk]' member='&quot;Edinburgh&quot;' />
              <groupfilter function='member' level='[none:F1:nk]' member='&quot;Gilbert&quot;' />
              <groupfilter function='member' level='[none:F1:nk]' member='&quot;Glendale&quot;' />
              <groupfilter function='member' level='[none:F1:nk]' member='&quot;Henderson&quot;' />
              <groupfilter function='member' level='[none:F1:nk]' member='&quot;Karlsruhe&quot;' />
              <groupfilter function='member' level='[none:F1:nk]' member='&quot;Las Vegas&quot;' />
              <groupfilter function='member' level='[none:F1:nk]' member='&quot;Laval&quot;' />
              <groupfilter function='member' level='[none:F1:nk]' member='&quot;Madison&quot;' />
              <groupfilter function='member' level='[none:F1:nk]' member='&quot;Mesa&quot;' />
              <groupfilter function='member' level='[none:F1:nk]' member='&quot;Montréal&quot;' />
              <groupfilter function='member' level='[none:F1:nk]' member='&quot;North Las Vegas&quot;' />
              <groupfilter function='member' level='[none:F1:nk]' member='&quot;Peoria&quot;' />
              <groupfilter function='member' level='[none:F1:nk]' member='&quot;Phoenix&quot;' />
              <groupfilter function='member' level='[none:F1:nk]' member='&quot;Pittsburgh&quot;' />
              <groupfilter function='member' level='[none:F1:nk]' member='&quot;Scottsdale&quot;' />
              <groupfilter function='member' level='[none:F1:nk]' member='&quot;Tempe&quot;' />
              <groupfilter function='member' level='[none:F1:nk]' member='&quot;Waterloo&quot;' />
            </groupfilter>
          </filter>
          <sort class='computed' column='[federated.0g3qb4g1qvqt2j1fsnw3u1gudf9e].[none:F1:nk]' direction='DESC' using='[federated.0g3qb4g1qvqt2j1fsnw3u1gudf9e].[sum:F2:qk]' />
          <slices>
            <column>[federated.0g3qb4g1qvqt2j1fsnw3u1gudf9e].[none:F1:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[federated.0g3qb4g1qvqt2j1fsnw3u1gudf9e].[none:F1:nk]</rows>
        <cols>[federated.0g3qb4g1qvqt2j1fsnw3u1gudf9e].[sum:F2:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='High Reviews'>
      <table>
        <view>
          <datasources>
            <datasource caption='restaurant_businesses' name='federated.1apeh180rt596z16v3i990qkjpcx' />
          </datasources>
          <datasource-dependencies datasource='federated.1apeh180rt596z16v3i990qkjpcx'>
            <column aggregation='None' datatype='integer' name='[Review Count (bin) (copy)]' role='dimension' type='quantitative'>
              <calculation class='bin' decimals='2' formula='[review_count]' peg='0' size='250' />
            </column>
            <column aggregation='None' datatype='integer' name='[Review Count (bin)]' role='dimension' type='quantitative'>
              <calculation class='bin' decimals='1' formula='[review_count]' peg='0' size='10' />
            </column>
            <column-instance column='[review_count]' derivation='Count' name='[cnt:review_count:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Review Count (bin) (copy)]' derivation='None' name='[none:Review Count (bin) (copy):ok]' pivot='key' type='ordinal' />
            <column-instance column='[Review Count (bin) (copy)]' derivation='None' name='[none:Review Count (bin) (copy):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Review Count (bin)]' derivation='None' name='[none:Review Count (bin):ok]' pivot='key' type='ordinal' />
            <column caption='Review Count' datatype='integer' name='[review_count]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1apeh180rt596z16v3i990qkjpcx].[none:Review Count (bin) (copy):ok]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Review Count (bin) (copy):ok]' />
              <groupfilter function='member' level='[none:Review Count (bin) (copy):ok]' member='1' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1apeh180rt596z16v3i990qkjpcx].[none:Review Count (bin):ok]'>
            <groupfilter from='48' function='range' level='[none:Review Count (bin):ok]' to='620' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1apeh180rt596z16v3i990qkjpcx].[none:Review Count (bin):ok]</column>
            <column>[federated.1apeh180rt596z16v3i990qkjpcx].[none:Review Count (bin) (copy):ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1apeh180rt596z16v3i990qkjpcx].[cnt:review_count:qk]' field-type='quantitative' max='1000' min='0' range-type='fixed' scope='rows' type='space' />
            <format attr='subtitle' class='0' field='[federated.1apeh180rt596z16v3i990qkjpcx].[cnt:review_count:qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.1apeh180rt596z16v3i990qkjpcx].[cnt:review_count:qk]' scope='rows' value='true' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing custom-mark-size-in-axis-units='1.0' mark-alignment='mark-alignment-left' mark-sizing-setting='marks-scaling-on' use-custom-mark-size='false' />
          </pane>
        </panes>
        <rows>[federated.1apeh180rt596z16v3i990qkjpcx].[cnt:review_count:qk]</rows>
        <cols>[federated.1apeh180rt596z16v3i990qkjpcx].[none:Review Count (bin) (copy):qk]</cols>
        <show-full-range>
          <column>[federated.1apeh180rt596z16v3i990qkjpcx].[Review Count (bin)]</column>
        </show-full-range>
      </table>
    </worksheet>
    <worksheet name='Map'>
      <table>
        <view>
          <datasources>
            <datasource caption='restaurant_businesses' name='federated.1apeh180rt596z16v3i990qkjpcx' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1apeh180rt596z16v3i990qkjpcx'>
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column-instance column='[state]' derivation='None' name='[none:state:nk]' pivot='key' type='nominal' />
            <column caption='State' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1apeh180rt596z16v3i990qkjpcx].[none:state:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:state:nk]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:state:nk]' member='&quot;AK&quot;' />
                <groupfilter function='member' level='[none:state:nk]' member='&quot;FL&quot;' />
                <groupfilter function='member' level='[none:state:nk]' member='&quot;NM&quot;' />
                <groupfilter function='member' level='[none:state:nk]' member='&quot;TX&quot;' />
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1apeh180rt596z16v3i990qkjpcx].[none:state:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1apeh180rt596z16v3i990qkjpcx].[Longitude (generated)]' field-type='quantitative' max='-7384150.7707171431' min='-13915714.263670541' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.1apeh180rt596z16v3i990qkjpcx].[Latitude (generated)]' field-type='quantitative' max='6610405.6360525312' min='2998672.433381266' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1apeh180rt596z16v3i990qkjpcx].[sum:Number of Records:qk]' max='9431' min='1' type='interpolated' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.1apeh180rt596z16v3i990qkjpcx].[sum:Number of Records:qk]' value='Count'>
              <formatted-text>
                <run>Count</run>
              </formatted-text>
            </format>
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='false' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='true' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <encodings>
              <color column='[federated.1apeh180rt596z16v3i990qkjpcx].[sum:Number of Records:qk]' />
              <lod column='[federated.1apeh180rt596z16v3i990qkjpcx].[none:state:nk]' />
              <geometry column='[federated.1apeh180rt596z16v3i990qkjpcx].[Geometry (generated)]' />
            </encodings>
            <style>
              <style-rule element='pane'>
                <format attr='minheight' value='522' />
                <format attr='maxheight' value='522' />
                <format attr='minwidth' value='944' />
                <format attr='maxwidth' value='944' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1apeh180rt596z16v3i990qkjpcx].[Latitude (generated)]</rows>
        <cols>[federated.1apeh180rt596z16v3i990qkjpcx].[Longitude (generated)]</cols>
      </table>
    </worksheet>
    <worksheet name='Num. Reviews'>
      <table>
        <view>
          <datasources>
            <datasource caption='restaurant_businesses' name='federated.1apeh180rt596z16v3i990qkjpcx' />
          </datasources>
          <datasource-dependencies datasource='federated.1apeh180rt596z16v3i990qkjpcx'>
            <column aggregation='None' datatype='integer' name='[Review Count (bin)]' role='dimension' type='quantitative'>
              <calculation class='bin' decimals='1' formula='[review_count]' peg='0' size='10' />
            </column>
            <column-instance column='[review_count]' derivation='Count' name='[cnt:review_count:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Review Count (bin)]' derivation='None' name='[none:Review Count (bin):ok]' pivot='key' type='ordinal' />
            <column-instance column='[Review Count (bin)]' derivation='None' name='[none:Review Count (bin):qk]' pivot='key' type='quantitative' />
            <column caption='Review Count' datatype='integer' name='[review_count]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1apeh180rt596z16v3i990qkjpcx].[none:Review Count (bin):ok]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Review Count (bin):ok]' />
              <groupfilter from='20' function='range' level='[none:Review Count (bin):ok]' to='620' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1apeh180rt596z16v3i990qkjpcx].[none:Review Count (bin):ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing custom-mark-size-in-axis-units='1.0' mark-alignment='mark-alignment-left' mark-sizing-setting='marks-scaling-on' use-custom-mark-size='false' />
          </pane>
        </panes>
        <rows>[federated.1apeh180rt596z16v3i990qkjpcx].[cnt:review_count:qk]</rows>
        <cols>[federated.1apeh180rt596z16v3i990qkjpcx].[none:Review Count (bin):qk]</cols>
        <show-full-range>
          <column>[federated.1apeh180rt596z16v3i990qkjpcx].[Review Count (bin)]</column>
        </show-full-range>
      </table>
    </worksheet>
    <worksheet name='Restaurant Types'>
      <table>
        <view>
          <datasources>
            <datasource caption='restaurant_cats' name='federated.1pm2nz005kg5am1426ety1txcjdz' />
          </datasources>
          <datasource-dependencies datasource='federated.1pm2nz005kg5am1426ety1txcjdz'>
            <column caption='Restaurant Type' datatype='string' name='[F1]' role='dimension' type='nominal' />
            <column caption='Count' datatype='integer' name='[F2]' role='measure' type='quantitative' />
            <column-instance column='[F1]' derivation='None' name='[none:F1:nk]' pivot='key' type='nominal' />
            <column-instance column='[F2]' derivation='Sum' name='[sum:F2:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1pm2nz005kg5am1426ety1txcjdz].[none:F1:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:F1:nk]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:F1:nk]' member='&quot;Active Life&quot;' />
                <groupfilter function='member' level='[none:F1:nk]' member='&quot;Afghan&quot;' />
                <groupfilter function='member' level='[none:F1:nk]' member='&quot;African&quot;' />
                <groupfilter function='member' level='[none:F1:nk]' member='&quot;aHc3R3YV2sMY57RyGXw5qw&quot;' />
                <groupfilter function='member' level='[none:F1:nk]' member='&quot;Alsatian&quot;' />
                <groupfilter function='member' level='[none:F1:nk]' member='&quot;Amateur Sports Teams&quot;' />
                <groupfilter function='member' level='[none:F1:nk]' member='&quot;Amusement Parks&quot;' />
                <groupfilter function='member' level='[none:F1:nk]' member='&quot;Antiques&quot;' />
                <groupfilter function='member' level='[none:F1:nk]' member='&quot;Appliances&quot;' />
                <groupfilter function='member' level='[none:F1:nk]' member='&quot;Arabian&quot;' />
                <groupfilter function='member' level='[none:F1:nk]' member='&quot;Argentine&quot;' />
                <groupfilter function='member' level='[none:F1:nk]' member='&quot;Arts &amp; Crafts&quot;' />
                <groupfilter function='member' level='[none:F1:nk]' member='&quot;Australian&quot;' />
                <groupfilter function='member' level='[none:F1:nk]' member='&quot;Austrian&quot;' />
                <groupfilter function='member' level='[none:F1:nk]' member='&quot;Automotive&quot;' />
                <groupfilter function='member' level='[none:F1:nk]' member='&quot;Baden&quot;' />
                <groupfilter function='member' level='[none:F1:nk]' member='&quot;Bagels&quot;' />
                <groupfilter function='member' level='[none:F1:nk]' member='&quot;Bangladeshi&quot;' />
                <groupfilter function='member' level='[none:F1:nk]' member='&quot;Banks &amp; Credit Unions&quot;' />
                <groupfilter function='member' level='[none:F1:nk]' member='&quot;Bartenders&quot;' />
                <groupfilter function='member' level='[none:F1:nk]' member='&quot;Basque&quot;' />
                <groupfilter function='member' level='[none:F1:nk]' member='&quot;Bavarian&quot;' />
                <groupfilter function='member' level='[none:F1:nk]' member='&quot;Beauty &amp; Spas&quot;' />
                <groupfilter function='member' level='[none:F1:nk]' member='&quot;Bed &amp; Breakfast&quot;' />
                <groupfilter function='member' level='[none:F1:nk]' member='&quot;Beer&quot;' />
                <groupfilter function='member' level='[none:F1:nk]' member='&quot;Beer Garden&quot;' />
                <groupfilter function='member' level='[none:F1:nk]' member='&quot;Beer Hall&quot;' />
                <groupfilter function='member' level='[none:F1:nk]' member='&quot;Belgian&quot;' />
                <groupfilter function='member' level='[none:F1:nk]' member='&quot;Bikes&quot;' />
                <groupfilter function='member' level='[none:F1:nk]' member='&quot;Bistros&quot;' />
                <groupfilter function='member' level='[none:F1:nk]' member='&quot;Boating&quot;' />
                <groupfilter function='member' level='[none:F1:nk]' member='&quot;Books&quot;' />
                <groupfilter function='member' level='[none:F1:nk]' member='&quot;Bookstores&quot;' />
                <groupfilter function='member' level='[none:F1:nk]' member='&quot;Bowling&quot;' />
                <groupfilter function='member' level='[none:F1:nk]' member='&quot;Brasseries&quot;' />
                <groupfilter function='member' level='[none:F1:nk]' member='&quot;Brazilian&quot;' />
                <groupfilter function='member' level='[none:F1:nk]' member='&quot;Breweries&quot;' />
                <groupfilter function='member' level='[none:F1:nk]' member='&quot;British&quot;' />
                <groupfilter function='member' level='[none:F1:nk]' member='&quot;Bubble Tea&quot;' />
                <groupfilter function='member' level='[none:F1:nk]' member='&quot;Burmese&quot;' />
                <groupfilter function='member' level='[none:F1:nk]' member='&quot;Butcher&quot;' />
                <groupfilter function='member' level='[none:F1:nk]' member='&quot;Cafeteria&quot;' />
                <groupfilter function='member' level='[none:F1:nk]' member='&quot;Cambodian&quot;' />
                <groupfilter function='member' level='[none:F1:nk]' member='&quot;Canadian (New)&quot;' />
                <groupfilter function='member' level='[none:F1:nk]' member='&quot;Candy Stores&quot;' />
                <groupfilter function='member' level='[none:F1:nk]' member='&quot;Cantonese&quot;' />
                <groupfilter function='member' level='[none:F1:nk]' member='&quot;Car Wash&quot;' />
                <groupfilter function='member' level='[none:F1:nk]' member='&quot;Caribbean&quot;' />
                <groupfilter function='member' level='[none:F1:nk]' member='&quot;Caterers&quot;' />
                <groupfilter function='member' level='[none:F1:nk]' member='&quot;Cheese Shops&quot;' />
                <groupfilter function='member' level='[none:F1:nk]' member='&quot;Cheesesteaks&quot;' />
                <groupfilter function='member' level='[none:F1:nk]' member='&quot;Chicken Shop&quot;' />
                <groupfilter function='member' level='[none:F1:nk]' member='&quot;Chocolatiers &amp; Shops&quot;' />
                <groupfilter function='member' level='[none:F1:nk]' member='&quot;Colleges &amp; Universities&quot;' />
                <groupfilter function='member' level='[none:F1:nk]' member='&quot;Colombian&quot;' />
                <groupfilter function='member' level='[none:F1:nk]' member='&quot;Comfort Food&quot;' />
                <groupfilter function='member' level='[none:F1:nk]' member='&quot;Convenience Stores&quot;' />
                <groupfilter function='member' level='[none:F1:nk]' member='&quot;Cooking Schools&quot;' />
                <groupfilter function='member' level='[none:F1:nk]' member='&quot;Cosmetics &amp; Beauty Supply&quot;' />
                <groupfilter function='member' level='[none:F1:nk]' member='&quot;Creperies&quot;' />
                <groupfilter function='member' level='[none:F1:nk]' member='&quot;Cuban&quot;' />
                <groupfilter function='member' level='[none:F1:nk]' member='&quot;Cupcakes&quot;' />
                <groupfilter function='member' level='[none:F1:nk]' member='&quot;Curry Sausage&quot;' />
                <groupfilter function='member' level='[none:F1:nk]' member='&quot;Czech&quot;' />
                <groupfilter function='member' level='[none:F1:nk]' member='&quot;Day Spas&quot;' />
                <groupfilter function='member' level='[none:F1:nk]' member='&quot;Delicatessen&quot;' />
                <groupfilter function='member' level='[none:F1:nk]' member='&quot;Department Stores&quot;' />
                <groupfilter function='member' level='[none:F1:nk]' member='&quot;Dim Sum&quot;' />
                <groupfilter function='member' level='[none:F1:nk]' member='&quot;Distilleries&quot;' />
                <groupfilter function='member' level='[none:F1:nk]' member='&quot;Do-It-Yourself Food&quot;' />
                <groupfilter function='member' level='[none:F1:nk]' member='&quot;Dominican&quot;' />
                <groupfilter function='member' level='[none:F1:nk]' member='&quot;Donuts&quot;' />
                <groupfilter function='member' level='[none:F1:nk]' member='&quot;Dry Cleaning &amp; Laundry&quot;' />
                <groupfilter function='member' level='[none:F1:nk]' member='&quot;Eastern European&quot;' />
                <groupfilter function='member' level='[none:F1:nk]' member='&quot;Education&quot;' />
                <groupfilter function='member' level='[none:F1:nk]' member='&quot;Egyptian&quot;' />
                <groupfilter function='member' level='[none:F1:nk]' member='&quot;Empanadas&quot;' />
                <groupfilter function='member' level='[none:F1:nk]' member='&quot;Ethiopian&quot;' />
                <groupfilter function='member' level='[none:F1:nk]' member='&quot;Ethnic Food&quot;' />
                <groupfilter function='member' level='[none:F1:nk]' member='&quot;Ethnic Grocery&quot;' />
                <groupfilter function='member' level='[none:F1:nk]' member='&quot;Event Planning &amp; Services&quot;' />
                <groupfilter function='member' level='[none:F1:nk]' member='&quot;Falafel&quot;' />
                <groupfilter function='member' level='[none:F1:nk]' member='&quot;Farmers Market&quot;' />
                <groupfilter function='member' level='[none:F1:nk]' member='&quot;Fashion&quot;' />
                <groupfilter function='member' level='[none:F1:nk]' member='&quot;Filipino&quot;' />
                <groupfilter function='member' level='[none:F1:nk]' member='&quot;Financial Services&quot;' />
                <groupfilter function='member' level='[none:F1:nk]' member='&quot;Fish &amp; Chips&quot;' />
                <groupfilter function='member' level='[none:F1:nk]' member='&quot;Fitness &amp; Instruction&quot;' />
                <groupfilter function='member' level='[none:F1:nk]' member='&quot;Florists&quot;' />
                <groupfilter function='member' level='[none:F1:nk]' member='&quot;Flowers &amp; Gifts&quot;' />
                <groupfilter function='member' level='[none:F1:nk]' member='&quot;Fondue&quot;' />
                <groupfilter function='member' level='[none:F1:nk]' member='&quot;Food Court&quot;' />
                <groupfilter function='member' level='[none:F1:nk]' member='&quot;Food Delivery Services&quot;' />
                <groupfilter function='member' level='[none:F1:nk]' member='&quot;Food Stands&quot;' />
                <groupfilter function='member' level='[none:F1:nk]' member='&quot;Food Trucks&quot;' />
                <groupfilter function='member' level='[none:F1:nk]' member='&quot;Fruits &amp; Veggies&quot;' />
                <groupfilter function='member' level='[none:F1:nk]' member='&quot;Furniture Stores&quot;' />
                <groupfilter function='member' level='[none:F1:nk]' member='&quot;Gas &amp; Service Stations&quot;' />
                <groupfilter function='member' level='[none:F1:nk]' member='&quot;Gastropubs&quot;' />
                <groupfilter function='member' level='[none:F1:nk]' member='&quot;Gelato&quot;' />
                <groupfilter function='member' level='[none:F1:nk]' member='&quot;German&quot;' />
                <groupfilter function='member' level='[none:F1:nk]' member='&quot;Golf&quot;' />
                <groupfilter function='member' level='[none:F1:nk]' member='&quot;Golf Equipment Shops&quot;' />
                <groupfilter function='member' level='[none:F1:nk]' member='&quot;Grocery&quot;' />
                <groupfilter function='member' level='[none:F1:nk]' member='&quot;Guest Houses&quot;' />
                <groupfilter function='member' level='[none:F1:nk]' member='&quot;Haitian&quot;' />
                <groupfilter function='member' level='[none:F1:nk]' member='&quot;Halal&quot;' />
                <groupfilter function='member' level='[none:F1:nk]' member='&quot;Hardware Stores&quot;' />
                <groupfilter function='member' level='[none:F1:nk]' member='&quot;Health &amp; Medical&quot;' />
                <groupfilter function='member' level='[none:F1:nk]' member='&quot;Health Markets&quot;' />
                <groupfilter function='member' level='[none:F1:nk]' member='&quot;Herbs &amp; Spices&quot;' />
                <groupfilter function='member' level='[none:F1:nk]' member='&quot;Hiking&quot;' />
                <groupfilter function='member' level='[none:F1:nk]' member='&quot;Himalayan/Nepalese&quot;' />
                <groupfilter function='member' level='[none:F1:nk]' member='&quot;Home &amp; Garden&quot;' />
                <groupfilter function='member' level='[none:F1:nk]' member='&quot;Home Decor&quot;' />
                <groupfilter function='member' level='[none:F1:nk]' member='&quot;Home Services&quot;' />
                <groupfilter function='member' level='[none:F1:nk]' member='&quot;Hong Kong Style Cafe&quot;' />
                <groupfilter function='member' level='[none:F1:nk]' member='&quot;Horseback Riding&quot;' />
                <groupfilter function='member' level='[none:F1:nk]' member='&quot;Hot Dogs&quot;' />
                <groupfilter function='member' level='[none:F1:nk]' member='&quot;Hot Pot&quot;' />
                <groupfilter function='member' level='[none:F1:nk]' member='&quot;Hotels&quot;' />
                <groupfilter function='member' level='[none:F1:nk]' member='&quot;Hotels &amp; Travel&quot;' />
                <groupfilter function='member' level='[none:F1:nk]' member='&quot;Hungarian&quot;' />
                <groupfilter function='member' level='[none:F1:nk]' member='&quot;Ice Cream &amp; Frozen Yogurt&quot;' />
                <groupfilter function='member' level='[none:F1:nk]' member='&quot;Indonesian&quot;' />
                <groupfilter function='member' level='[none:F1:nk]' member='&quot;International&quot;' />
                <groupfilter function='member' level='[none:F1:nk]' member='&quot;Internet Cafes&quot;' />
                <groupfilter function='member' level='[none:F1:nk]' member='&quot;Irish&quot;' />
                <groupfilter function='member' level='[none:F1:nk]' member='&quot;Kebab&quot;' />
                <groupfilter function='member' level='[none:F1:nk]' member='&quot;Kids Activities&quot;' />
                <groupfilter function='member' level='[none:F1:nk]' member='&quot;Kitchen &amp; Bath&quot;' />
                <groupfilter function='member' level='[none:F1:nk]' member='&quot;Kosher&quot;' />
                <groupfilter function='member' level='[none:F1:nk]' member='&quot;Lakes&quot;' />
                <groupfilter function='member' level='[none:F1:nk]' member='&quot;Landmarks &amp; Historical Buildings&quot;' />
                <groupfilter function='member' level='[none:F1:nk]' member='&quot;Laotian&quot;' />
                <groupfilter function='member' level='[none:F1:nk]' member='&quot;Latin American&quot;' />
                <groupfilter function='member' level='[none:F1:nk]' member='&quot;Lebanese&quot;' />
                <groupfilter function='member' level='[none:F1:nk]' member='&quot;Live/Raw Food&quot;' />
                <groupfilter function='member' level='[none:F1:nk]' member='&quot;Local Flavor&quot;' />
                <groupfilter function='member' level='[none:F1:nk]' member='&quot;Local Services&quot;' />
                <groupfilter function='member' level='[none:F1:nk]' member='&quot;Macarons&quot;' />
                <groupfilter function='member' level='[none:F1:nk]' member='&quot;Mags&quot;' />
                <groupfilter function='member' level='[none:F1:nk]' member='&quot;Malaysian&quot;' />
                <groupfilter function='member' level='[none:F1:nk]' member='&quot;Meat Shops&quot;' />
                <groupfilter function='member' level='[none:F1:nk]' member='&quot;Men&apos;s Clothing&quot;' />
                <groupfilter function='member' level='[none:F1:nk]' member='&quot;Modern European&quot;' />
                <groupfilter function='member' level='[none:F1:nk]' member='&quot;Mongolian&quot;' />
                <groupfilter function='member' level='[none:F1:nk]' member='&quot;Moroccan&quot;' />
                <groupfilter function='member' level='[none:F1:nk]' member='&quot;Music &amp; DVDs&quot;' />
                <groupfilter function='member' level='[none:F1:nk]' member='&quot;Music &amp; Video&quot;' />
                <groupfilter function='member' level='[none:F1:nk]' member='&quot;New Mexican Cuisine&quot;' />
                <groupfilter function='member' level='[none:F1:nk]' member='&quot;Noodles&quot;' />
                <groupfilter function='member' level='[none:F1:nk]' member='&quot;Nutritionists&quot;' />
                <groupfilter function='member' level='[none:F1:nk]' member='&quot;Organic Stores&quot;' />
                <groupfilter function='member' level='[none:F1:nk]' member='&quot;Oriental&quot;' />
                <groupfilter function='member' level='[none:F1:nk]' member='&quot;Pakistani&quot;' />
                <groupfilter function='member' level='[none:F1:nk]' member='&quot;Palatine&quot;' />
                <groupfilter function='member' level='[none:F1:nk]' member='&quot;Party &amp; Event Planning&quot;' />
                <groupfilter function='member' level='[none:F1:nk]' member='&quot;Pasta Shops&quot;' />
                <groupfilter function='member' level='[none:F1:nk]' member='&quot;Patisserie/Cake Shop&quot;' />
                <groupfilter function='member' level='[none:F1:nk]' member='&quot;Persian/Iranian&quot;' />
                <groupfilter function='member' level='[none:F1:nk]' member='&quot;Personal Chefs&quot;' />
                <groupfilter function='member' level='[none:F1:nk]' member='&quot;Peruvian&quot;' />
                <groupfilter function='member' level='[none:F1:nk]' member='&quot;Pita&quot;' />
                <groupfilter function='member' level='[none:F1:nk]' member='&quot;Poke&quot;' />
                <groupfilter function='member' level='[none:F1:nk]' member='&quot;Polish&quot;' />
                <groupfilter function='member' level='[none:F1:nk]' member='&quot;Portuguese&quot;' />
                <groupfilter function='member' level='[none:F1:nk]' member='&quot;Poutineries&quot;' />
                <groupfilter function='member' level='[none:F1:nk]' member='&quot;Pretzels&quot;' />
                <groupfilter function='member' level='[none:F1:nk]' member='&quot;Public Services &amp; Government&quot;' />
                <groupfilter function='member' level='[none:F1:nk]' member='&quot;Puerto Rican&quot;' />
                <groupfilter function='member' level='[none:F1:nk]' member='&quot;Ramen&quot;' />
                <groupfilter function='member' level='[none:F1:nk]' member='&quot;Real Estate&quot;' />
                <groupfilter function='member' level='[none:F1:nk]' member='&quot;Real Estate Services&quot;' />
                <groupfilter function='member' level='[none:F1:nk]' member='&quot;Recreation Centers&quot;' />
                <groupfilter function='member' level='[none:F1:nk]' member='&quot;Restaurants&quot;' />
                <groupfilter function='member' level='[none:F1:nk]' member='&quot;Russian&quot;' />
                <groupfilter function='member' level='[none:F1:nk]' member='&quot;Salvadoran&quot;' />
                <groupfilter function='member' level='[none:F1:nk]' member='&quot;Scandinavian&quot;' />
                <groupfilter function='member' level='[none:F1:nk]' member='&quot;Scottish&quot;' />
                <groupfilter function='member' level='[none:F1:nk]' member='&quot;Seafood Markets&quot;' />
                <groupfilter function='member' level='[none:F1:nk]' member='&quot;Senegalese&quot;' />
                <groupfilter function='member' level='[none:F1:nk]' member='&quot;Serbo Croatian&quot;' />
                <groupfilter function='member' level='[none:F1:nk]' member='&quot;Shanghainese&quot;' />
                <groupfilter function='member' level='[none:F1:nk]' member='&quot;Shaved Ice&quot;' />
                <groupfilter function='member' level='[none:F1:nk]' member='&quot;Shopping&quot;' />
                <groupfilter function='member' level='[none:F1:nk]' member='&quot;Shopping Centers&quot;' />
                <groupfilter function='member' level='[none:F1:nk]' member='&quot;Singaporean&quot;' />
                <groupfilter function='member' level='[none:F1:nk]' member='&quot;Slovakian&quot;' />
                <groupfilter function='member' level='[none:F1:nk]' member='&quot;Soccer&quot;' />
                <groupfilter function='member' level='[none:F1:nk]' member='&quot;Soul Food&quot;' />
                <groupfilter function='member' level='[none:F1:nk]' member='&quot;Soup&quot;' />
                <groupfilter function='member' level='[none:F1:nk]' member='&quot;Spanish&quot;' />
                <groupfilter function='member' level='[none:F1:nk]' member='&quot;Specialty Food&quot;' />
                <groupfilter function='member' level='[none:F1:nk]' member='&quot;Specialty Schools&quot;' />
                <groupfilter function='member' level='[none:F1:nk]' member='&quot;Sporting Goods&quot;' />
                <groupfilter function='member' level='[none:F1:nk]' member='&quot;Sports Clubs&quot;' />
                <groupfilter function='member' level='[none:F1:nk]' member='&quot;Sports Wear&quot;' />
                <groupfilter function='member' level='[none:F1:nk]' member='&quot;Sri Lankan&quot;' />
                <groupfilter function='member' level='[none:F1:nk]' member='&quot;Street Vendors&quot;' />
                <groupfilter function='member' level='[none:F1:nk]' member='&quot;Swimming Pools&quot;' />
                <groupfilter function='member' level='[none:F1:nk]' member='&quot;Swiss Food&quot;' />
                <groupfilter function='member' level='[none:F1:nk]' member='&quot;Szechuan&quot;' />
                <groupfilter function='member' level='[none:F1:nk]' member='&quot;Taiwanese&quot;' />
                <groupfilter function='member' level='[none:F1:nk]' member='&quot;Tapas Bars&quot;' />
                <groupfilter function='member' level='[none:F1:nk]' member='&quot;Tapas/Small Plates&quot;' />
                <groupfilter function='member' level='[none:F1:nk]' member='&quot;Tea Rooms&quot;' />
                <groupfilter function='member' level='[none:F1:nk]' member='&quot;Teppanyaki&quot;' />
                <groupfilter function='member' level='[none:F1:nk]' member='&quot;Tex-Mex&quot;' />
                <groupfilter function='member' level='[none:F1:nk]' member='&quot;Tours&quot;' />
                <groupfilter function='member' level='[none:F1:nk]' member='&quot;Toy Stores&quot;' />
                <groupfilter function='member' level='[none:F1:nk]' member='&quot;Travel Services&quot;' />
                <groupfilter function='member' level='[none:F1:nk]' member='&quot;Trinidadian&quot;' />
                <groupfilter function='member' level='[none:F1:nk]' member='&quot;Turkish&quot;' />
                <groupfilter function='member' level='[none:F1:nk]' member='&quot;Tuscan&quot;' />
                <groupfilter function='member' level='[none:F1:nk]' member='&quot;Ukrainian&quot;' />
                <groupfilter function='member' level='[none:F1:nk]' member='&quot;Uzbek&quot;' />
                <groupfilter function='member' level='[none:F1:nk]' member='&quot;Venezuelan&quot;' />
                <groupfilter function='member' level='[none:F1:nk]' member='&quot;Venues &amp; Event Spaces&quot;' />
                <groupfilter function='member' level='[none:F1:nk]' member='&quot;Vinyl Records&quot;' />
                <groupfilter function='member' level='[none:F1:nk]' member='&quot;Vitamins &amp; Supplements&quot;' />
                <groupfilter function='member' level='[none:F1:nk]' member='&quot;Waffles&quot;' />
                <groupfilter function='member' level='[none:F1:nk]' member='&quot;Wine &amp; Spirits&quot;' />
                <groupfilter function='member' level='[none:F1:nk]' member='&quot;Wok&quot;' />
                <groupfilter function='member' level='[none:F1:nk]' member='&quot;Yoga&quot;' />
              </groupfilter>
            </groupfilter>
          </filter>
          <sort class='computed' column='[federated.1pm2nz005kg5am1426ety1txcjdz].[none:F1:nk]' direction='DESC' using='[federated.1pm2nz005kg5am1426ety1txcjdz].[sum:F2:qk]' />
          <slices>
            <column>[federated.1pm2nz005kg5am1426ety1txcjdz].[none:F1:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[federated.1pm2nz005kg5am1426ety1txcjdz].[none:F1:nk]</rows>
        <cols>[federated.1pm2nz005kg5am1426ety1txcjdz].[sum:F2:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Sheet 7'>
      <table>
        <view>
          <datasources>
            <datasource caption='restaurant_businesses' name='federated.1apeh180rt596z16v3i990qkjpcx' />
          </datasources>
          <datasource-dependencies datasource='federated.1apeh180rt596z16v3i990qkjpcx'>
            <column-instance column='[stars]' derivation='Avg' name='[avg:stars:qk]' pivot='key' type='quantitative' />
            <column caption='Stars' datatype='real' name='[stars]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1apeh180rt596z16v3i990qkjpcx].[avg:stars:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
    </worksheet>
    <worksheet name='Star Ratings'>
      <table>
        <view>
          <datasources>
            <datasource caption='restaurant_businesses' name='federated.1apeh180rt596z16v3i990qkjpcx' />
          </datasources>
          <datasource-dependencies datasource='federated.1apeh180rt596z16v3i990qkjpcx'>
            <column datatype='integer' name='[Stars (bin)]' role='dimension' type='quantitative'>
              <calculation class='bin' decimals='-1' formula='[stars]' peg='0' size='0.5' />
            </column>
            <column-instance column='[stars]' derivation='Count' name='[cnt:stars:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Stars (bin)]' derivation='None' name='[none:Stars (bin):qk]' pivot='key' type='quantitative' />
            <column caption='Stars' datatype='real' name='[stars]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing custom-mark-size-in-axis-units='1.0' mark-alignment='mark-alignment-left' mark-sizing-setting='marks-scaling-on' use-custom-mark-size='false' />
          </pane>
        </panes>
        <rows>[federated.1apeh180rt596z16v3i990qkjpcx].[cnt:stars:qk]</rows>
        <cols>[federated.1apeh180rt596z16v3i990qkjpcx].[none:Stars (bin):qk]</cols>
        <show-full-range>
          <column>[federated.1apeh180rt596z16v3i990qkjpcx].[Stars (bin)]</column>
        </show-full-range>
      </table>
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='Map Dashboard'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='100000' id='5' param='horz' type='layout-flow' w='100000' x='0' y='0'>
            <zone h='100000' id='3' type='layout-basic' w='99600' x='0' y='0'>
              <zone h='100000' id='1' name='Map' w='99600' x='0' y='0' />
            </zone>
          </zone>
        </zone>
        <zone h='7125' id='6' name='Map' pane-specification-id='0' param='[federated.1apeh180rt596z16v3i990qkjpcx].[sum:Number of Records:qk]' type='color' w='14000' x='78300' y='9875' />
      </zones>
    </dashboard>
    <dashboard name='Story 1' type='storyboard'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Yelp Data Viz</run>
          </formatted-text>
        </title>
      </layout-options>
      <style />
      <size maxheight='664' maxwidth='1016' minheight='664' minwidth='1016' sizing-mode='fixed' />
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='100000' id='1' param='vert' removable='false' type='layout-flow' w='100000' x='0' y='0'>
            <zone h='6776' id='3' type='title' w='100000' x='0' y='0' />
            <zone h='16415' id='4' paired-zone-id='5' removable='false' type='flipboard-nav' w='100000' x='0' y='6776' />
            <zone h='76207' id='5' paired-zone-id='4' removable='false' type='flipboard' w='100000' x='0' y='23191'>
              <flipboard active-id='2' show-nav-arrows='true'>
                <story-points>
                  <story-point caption='Restaurants included are in the following states:' captured-sheet='Map Dashboard' id='2' />
                  <story-point caption='There are many types of restaurants.' captured-sheet='Restaurant Types' id='3' />
                  <story-point caption='Average overall star ratings is around 3.5, skewed left.' captured-sheet='Star Ratings' id='4' />
                  <story-point caption='Most companies have under 100 reviews' captured-sheet='Num. Reviews' id='5' />
                  <story-point caption='However there are a few with a LOT of ratings!' captured-sheet='High Reviews' id='6'>
                    <capturedDeltas>
                      <worksheet name='High Reviews'>
                        <selection-collection>
                          <tuple-selection>
                            <tuple-reference>
                              <tuple-descriptor>
                                <pane-descriptor>
                                  <x-fields>
                                    <field>[federated.1apeh180rt596z16v3i990qkjpcx].[none:Review Count (bin) (copy):qk]</field>
                                  </x-fields>
                                  <y-fields>
                                    <field>[federated.1apeh180rt596z16v3i990qkjpcx].[cnt:review_count:qk]</field>
                                  </y-fields>
                                </pane-descriptor>
                                <columns>
                                  <field>[federated.1apeh180rt596z16v3i990qkjpcx].[cnt:review_count:qk]</field>
                                  <field>[federated.1apeh180rt596z16v3i990qkjpcx].[none:Review Count (bin) (copy):qk]</field>
                                </columns>
                              </tuple-descriptor>
                              <tuple>
                                <value>1</value>
                                <value>24</value>
                              </tuple>
                            </tuple-reference>
                          </tuple-selection>
                        </selection-collection>
                      </worksheet>
                    </capturedDeltas>
                  </story-point>
                </story-points>
              </flipboard>
            </zone>
          </zone>
        </zone>
      </zones>
    </dashboard>
  </dashboards>
  <windows source-height='72'>
    <window class='worksheet' name='Restaurant Types'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1pm2nz005kg5am1426ety1txcjdz].[none:F1:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Cities'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0g3qb4g1qvqt2j1fsnw3u1gudf9e].[none:F1:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Map'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1apeh180rt596z16v3i990qkjpcx].[sum:Number of Records:qk]' type='color' />
          </strip>
        </edge>
      </cards>
    </window>
    <window class='worksheet' name='Star Ratings'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
    </window>
    <window class='worksheet' name='Num. Reviews'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
    </window>
    <window class='worksheet' name='High Reviews'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1apeh180rt596z16v3i990qkjpcx].[none:Review Count (bin) (copy):qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Sheet 7'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
    </window>
    <window class='dashboard' maximized='true' name='Story 1'>
      <viewpoints />
      <active id='4' />
    </window>
    <window class='dashboard' name='Map Dashboard'>
      <viewpoints>
        <viewpoint name='Map'>
          <zoom type='entire-view' />
          <default-map-tool-selection tool='1' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Cities' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='High Reviews' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Map' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Map Dashboard' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Num. Reviews' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Restaurant Types' width='192'>
      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
      /w9nrb73s24lSQAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='24' name='Sheet 7' width='64'>
      iVBORw0KGgoAAAANSUhEUgAAAEAAAAAYCAYAAABKtPtEAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAACSklEQVRYhe2YP2gTYRjGn1wEFxE6CLp0KXRzkLe6BOUKjpcOFZGr4FJPcCkExEoQdIlY
      EJ0cIkXIIGjBIonQIWIh4NAoci4ZJEuGayRDJGI0PZLvcTCk+XNZRPsFvB8cd9/7vvd+zz0f
      H3dchCTxH2PoFqCb0ADdAnQTGqBbgG5CA3QL0E1ogG4BugkN0C1AN6EBugX0oIJS6sCnPXTg
      Mw7z4xPi55ZR7QutvHiHKzOHx9ywh0fzMTw7sopi7iIM7mLp9AI+D5edWEUxdwEvl85gbSQJ
      3NkqIn7MAKgZ1ayw5LV643a9QBFrbL2XsWk6CVr2Btu9Joqqe5BkJW1SUqWRnCLZqWcpkmCj
      e6t2A0ZQNdrjDGgWKJJko+3RsTL7BgxQpyNC1w9u4SaFTr7RG0+EAarts9Vq0ivl6Ygwma8F
      VPlMizBd6ZCs0DbTgQY08g4l4QZP5LsUcVjvC02EAT1Um14hRRFnMO6XKCJ86Hqs1Wr0ylla
      ZpIlrz5gQmsnQbELwb07ZZpi0VOD4Qg5eb/E3sTncD73oTfmtyJu330OAPgJAN+/oPCxitnZ
      U7j++AHOThkA9nBvLoaTb98jfjQy0nP3yTwuI4Pta9ODib+4fn9AhzuZDXqtzn7Ir9AWIemz
      7JYZvJU92laG/Yvpl1IUK0sVVK48WmKyHLBnNL8GDRyfcrEQWxuILt7fAlQVl5avYrO4jenh
      rxXV/n0CEO1evbq5iZWntzC69sDX1zdQXVzHTHQ0NzFbgEpBkTCi0cCH+FdMjAG6+AVcrRkP
      2THvMwAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Star Ratings' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Story 1' width='192'>
      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
      AAAAAElFTkSuQmCC
    </thumbnail>
  </thumbnails>
</workbook>
